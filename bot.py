from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("1Ô∏è‚É£ –Ø–∫ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –º–æ–¥–ø–∞–∫", callback_data="sub_info")],
        [InlineKeyboardButton("2Ô∏è‚É£ –î–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –º–æ–¥–ø–∞–∫", callback_data="modpack_info")],
        [InlineKeyboardButton("3Ô∏è‚É£ –°–æ—Ü–º–µ—Ä–µ–∂—ñ –ø—Ä–æ—î–∫—Ç–∞ Carleo Place", callback_data="socials")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏, —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=reply_markup)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "sub_info":
        keyboard = [
            [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ Boosty", url="https://boosty.to/—Ç–≤—ñ–π_–∞–∫–∞—É–Ω—Ç")],
            [InlineKeyboardButton("üí∏ –Ø–∫ –æ–ø–ª–∞—Ç–∏—Ç–∏ —á–µ—Ä–µ–∑ TON", callback_data="ton_help")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ]
        await query.edit_message_text("–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "ton_help":
        await query.edit_message_text(
            "ü™ô –©–æ–± –æ–ø–ª–∞—Ç–∏—Ç–∏ —á–µ—Ä–µ–∑ TON, –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å–∞–π—Ç –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é TON-–≥–∞–º–∞–Ω—Ü—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, [Tonkeeper](https://tonkeeper.com)) "
            "—Ç–∞ —Å–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥ –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –∫–æ—à—Ç–∏ –Ω–∞ –∞–¥—Ä–µ—Å—É, –≤–∫–∞–∑–∞–Ω—É –Ω–∞ Boosty.",
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="sub_info")]])
        )

    elif query.data == "modpack_info":
        keyboard = [
            [InlineKeyboardButton("üí¨ Discord —Å–µ—Ä–≤–µ—Ä", url="https://discord.gg/—Ç–≤—ñ–π_—Å–µ—Ä–≤–µ—Ä")],
            [InlineKeyboardButton("üì¢ Telegram –≥—Ä—É–ø–∞", url="https://t.me/—Ç–≤–æ—è_–≥—Ä—É–ø–∞")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ]
        await query.edit_message_text("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º–æ–¥–ø–∞–∫:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "socials":
        keyboard = [
            [InlineKeyboardButton("üí¨ Discord", url="https://discord.gg/—Ç–≤—ñ–π_—Å–µ—Ä–≤–µ—Ä")],
            [InlineKeyboardButton("üéµ TikTok", url="https://tiktok.com/@—Ç–≤—ñ–π_–∞–∫–∫–∞—É–Ω—Ç")],
            [InlineKeyboardButton("üì¢ Telegram", url="https://t.me/—Ç–≤—ñ–π_–∫–∞–Ω–∞–ª")],
            [InlineKeyboardButton("üì∫ YouTube", url="https://youtube.com/@—Ç–≤—ñ–π_–∫–∞–Ω–∞–ª")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ]
        await query.edit_message_text("–°–æ—Ü–º–µ—Ä–µ–∂—ñ Carleo Place:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "main_menu":
        await start(update, context)

# –ó–∞–ø—É—Å–∫
import os
app = ApplicationBuilder().token(os.environ["BOT_TOKEN]).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button))

app.run_polling()
